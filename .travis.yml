sudo: required

language: python

python:
  - "3.6"

services:
  - docker

branches:
  only:
  - master
  - dev
  - qa

before_install:
  - git clone  https://github.com/ramrod-project/frontend-ui.git

install:
  - pip install django==2.0.1 pytest pytest-django rethinkdb

before_script:
  - docker run -d --name myP -p 28015:28015 ramrodpcp/database-brain
  - sleep 10
  - pytest pcp_alpha
  - docker stop myP

script:
  - if [ "$TRAVIS_BRANCH" != "master"  ];
    then docker build -t ramrodpcp/frontend-ui:$TRAVIS_BRANCH . ;
    else docker build -t ramrodpcp/frontend-ui:latest . ;
    fi

  - docker network create test
  - if [ "$TRAVIS_BRANCH" != "master"  ];
    then docker run -d --rm --name rethinkdb_test -p 28015:28015 -e "STAGE=DEV" -e "LOGLEVEL=DEBUG" 
    --network test ramrodpcp/database-brain:$TRAVIS_BRANCH;
    else docker run -d --rm --name rethinkdb_test -p 28015:28015 -e "STAGE=DEV" -e "LOGLEVEL=DEBUG" 
    --network test ramrodpcp/database-brain:latest;
    fi

  - if [ "$TRAVIS_BRANCH" != "master"  ];
    then docker run -d --rm --name frontend -p 8080:8080 -e "STAGE=DEV" -e "LOGLEVEL=DEBUG" 
    --network test ramrodpcp/frontend-ui:$TRAVIS_BRANCH;
    else docker run -d --rm --name frontend -p 8080:8080 -e "STAGE=DEV" -e "LOGLEVEL=DEBUG" 
    --network test ramrodpcp/frontend-ui:latest;
    fi

  # This will eventually be for more integration testing
  - sleep 10
  - curl http://127.0.0.1:8080
  - docker ps
  - docker logs frontend
  - docker stop frontend
  - docker stop rethinkdb_test
  - docker network prune -f

after_success:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin;
  - if [ "$TRAVIS_BRANCH" == "master"  ];
    then docker push ramrodpcp/frontend-ui:latest;
    else docker push ramrodpcp/frontend-ui:$TRAVIS_BRANCH; fi

notifications:
  slack: ramrod-project:GDF82rRYDg3KSekrT3GA24qO